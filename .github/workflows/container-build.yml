name: Build and Release Docker Image

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  # Test job for pull requests
  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build test image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          platforms: linux/amd64
          push: false
          tags: test-image:latest

  # Build and push job for main branch
  build-and-push:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set version and configure git
        id: version
        run: |
          # Set version using major.minor.run_number format
          VERSION="1.0.${{ github.run_number }}"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Version will be: $VERSION"
          
          # Configure git for tagging
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ steps.version.outputs.VERSION }}
          labels: |
            org.opencontainers.image.title=Tumblr Upload Agent
            org.opencontainers.image.description=Multi-agent system for automatically uploading images to Tumblr with AI-powered descriptions
            org.opencontainers.image.version=${{ steps.version.outputs.VERSION }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Create and push git tag
        run: |
          git tag v${{ steps.version.outputs.VERSION }}
          git push origin v${{ steps.version.outputs.VERSION }}

      - name: Create GitHub Release
        uses: actions/github-script@v7
        with:
          script: |
            const { VERSION } = process.env;
            
            try {
              const release = await github.rest.repos.createRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag_name: `v${VERSION}`,
                name: `Release v${VERSION}`,
                body: `## Release v${VERSION}
                
                ### 🚀 Features
                - Multi-agent system for automated Tumblr uploads
                - AI-powered image analysis with Gemini
                - Rate limiting and retry logic
                - Docker containerization
                - Comprehensive logging and monitoring
                
                ### 🐳 Docker Image
                This release includes a published Docker image available at:
                
                \`\`\`bash
                # Pull and run the latest version
                docker pull ghcr.io/${{ github.repository }}:${VERSION}
                docker run -d ghcr.io/${{ github.repository }}:${VERSION}
                
                # Or pull the latest
                docker pull ghcr.io/${{ github.repository }}:latest
                docker run -d ghcr.io/${{ github.repository }}:latest
                \`\`\`
                
                ### 🛠️ Local Development
                You can also build locally:
                
                \`\`\`bash
                # Clone the repository
                git clone https://github.com/${{ github.repository }}.git
                cd tumblr-agent
                
                # Build the Docker image
                docker build -f docker/Dockerfile -t tumblr-agent:${VERSION} .
                
                # Or use docker-compose
                cd docker && docker-compose up -d
                \`\`\`
                
                ---
                **Build Info:**
                - Commit: ${{ github.sha }}
                - Build Number: ${{ github.run_number }}
                - Built on: ${{ github.event.head_commit.timestamp }}
                - Registry: ghcr.io/${{ github.repository }}`,
                draft: false,
                prerelease: false,
                generate_release_notes: true
              });
              
              console.log(`Created release: ${release.data.html_url}`);
            } catch (error) {
              console.error('Error creating release:', error);
              core.setFailed(error.message);
            }
        env:
          VERSION: ${{ steps.version.outputs.VERSION }}

      - name: Output summary
        run: |
          echo "## 🚀 Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📋 Build Details" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: \`${{ steps.version.outputs.VERSION }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Number**: \`${{ github.run_number }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🐳 Docker Image Published" >> $GITHUB_STEP_SUMMARY
          echo "Docker image published to GitHub Container Registry:" >> $GITHUB_STEP_SUMMARY
          echo "- \`ghcr.io/${{ github.repository }}:latest\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`ghcr.io/${{ github.repository }}:${{ steps.version.outputs.VERSION }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 Usage" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "# Pull and run the published image" >> $GITHUB_STEP_SUMMARY
          echo "docker pull ghcr.io/${{ github.repository }}:${{ steps.version.outputs.VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "docker run -d ghcr.io/${{ github.repository }}:${{ steps.version.outputs.VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY 